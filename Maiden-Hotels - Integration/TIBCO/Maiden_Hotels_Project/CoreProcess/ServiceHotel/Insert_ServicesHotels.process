<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/TIBCO/Maiden_Hotels_Project/Schemas/ServiceHotel.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/schemas/TIBCO/Maiden_Hotels_Project/Schemas/ServiceHotel.xsd" schemaLocation="/Maiden_Hotels_Project/Schemas/ServiceHotel.xsd"/>
    <pd:name>Maiden_Hotels_Project/CoreProcess/ServiceHotel/Insert_ServicesHotels.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:ServicesHotels"/>
    <pd:startX>57</pd:startX>
    <pd:startY>169</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="$Query_id/resultSet/Record">
                <pfx:StatusServiceHotel>
                    <pfx:SuccessServiceHotel>
                        <xsl:if test="$Query_id/resultSet/Record[1]/id">
                            <xsl:attribute name="value">
                                <xsl:value-of select="$Query_id/resultSet/Record[1]/id"/>
                            </xsl:attribute>
                        </xsl:if>
                    </pfx:SuccessServiceHotel>
                </pfx:StatusServiceHotel>
            </xsl:when>
            <xsl:when test="$Update/jdbcUpdateActivityOutput/noOfUpdates>0">
                <pfx:StatusServiceHotel>
                    <pfx:SuccessServiceHotel>
                        <xsl:if test="$Query_service/resultSet/Record[1]/id">
                            <xsl:attribute name="value">
                                <xsl:value-of select="$Query_service/resultSet/Record[1]/id"/>
                            </xsl:attribute>
                        </xsl:if>
                    </pfx:SuccessServiceHotel>
                </pfx:StatusServiceHotel>
            </xsl:when>
            <xsl:otherwise>
                <pfx:StatusServiceHotel>
                    <pfx:SuccessServiceHotel>
                        <xsl:attribute name="value">
                            <xsl:value-of select="-1"/>
                        </xsl:attribute>
                    </pfx:SuccessServiceHotel>
                </pfx:StatusServiceHotel>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:StatusServiceHotel"/>
    <pd:endX>976</pd:endX>
    <pd:endY>234</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1568907511195</pd:targetNamespace>
    <pd:activity name="Insert">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>326</pd:x>
        <pd:y>183</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Insert into services_hotel (id_hotel,id_service, status) VALUES(?,?,?)</statement>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>id_service</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>status</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
                <id_service>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_service>
                <status>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@status)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@status"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </status>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Query_id">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>798</pd:x>
        <pd:y>184</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>Select * from services_hotel WHERE id_hotel=? and id_service=?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>id_service</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_service</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
                <id_service>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_service>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Error">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>549</pd:x>
        <pd:y>334</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Query_service">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>204</pd:x>
        <pd:y>325</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>Select * from services_hotel WHERE id_hotel=? and id_service=?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>id_service</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_service</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
                <id_service>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_service>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>439</pd:x>
        <pd:y>495</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>UPDATE services_hotel SET id_hotel=?, id_service=?, status=?  WHERE id=?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>id_services</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>status</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>id</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
                <id_services>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@id_service"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_services>
                <status>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@status)">
                            <xsl:value-of select="$Start/pfx:ServicesHotels/pfx:ServiceHotel[1]/@status"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </status>
                <id>
                    <xsl:choose>
                        <xsl:when test="exists($Query_service/resultSet/Record[1]/id)">
                            <xsl:value-of select="$Query_service/resultSet/Record[1]/id"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Insert</pd:from>
        <pd:to>Query_id</pd:to>
        <pd:xpathDescription>if insert</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Insert/jdbcUpdateActivityOutput/noOfUpdates&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_id</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Insert</pd:from>
        <pd:to>Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_id</pd:from>
        <pd:to>Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Query_service</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_service</pd:from>
        <pd:to>Insert</pd:to>
        <pd:xpathDescription>notExists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(exists($Query_service/resultSet/Record))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_service</pd:from>
        <pd:to>Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_service</pd:from>
        <pd:to>Update</pd:to>
        <pd:xpathDescription>exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Query_service/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Update</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Update</pd:from>
        <pd:to>Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>