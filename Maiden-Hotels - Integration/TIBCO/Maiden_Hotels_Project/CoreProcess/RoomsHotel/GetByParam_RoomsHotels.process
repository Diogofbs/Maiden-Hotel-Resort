<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/TIBCO/Maiden_Hotels_Project/Schemas/ServiceHotel.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/schemas/TIBCO/Maiden_Hotels_Project/Schemas/RoomsHotel.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/schemas/TIBCO/Maiden_Hotels_Project/Schemas/ServiceHotel.xsd" schemaLocation="/Maiden_Hotels_Project/Schemas/ServiceHotel.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/schemas/TIBCO/Maiden_Hotels_Project/Schemas/RoomsHotel.xsd" schemaLocation="/Maiden_Hotels_Project/Schemas/RoomsHotel.xsd"/>
    <pd:name>Maiden_Hotels_Project/CoreProcess/RoomsHotel/GetByParam_RoomsHotels.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx2:roomsHotels"/>
    <pd:startX>131</pd:startX>
    <pd:startY>197</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="$Get_ByCost/resultSet/Record">
                <pfx2:roomsHotels>
                    <xsl:for-each select="$Get_ByCost/resultSet/Record">
                        <pfx2:roomsHotel>
                            <xsl:attribute name="id">
                                <xsl:value-of select="id"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_hotel">
                                <xsl:value-of select="id_hotel"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_rooms">
                                <xsl:value-of select="id_rooms"/>
                            </xsl:attribute>
                            <xsl:attribute name="room_number">
                                <xsl:value-of select="room_number"/>
                            </xsl:attribute>
                            <xsl:attribute name="cost">
                                <xsl:value-of select="cost"/>
                            </xsl:attribute>
                        </pfx2:roomsHotel>
                    </xsl:for-each>
                </pfx2:roomsHotels>
            </xsl:when>
            <xsl:when test="$Get_ByCostAndHotel/resultSet/Record">
                <pfx2:roomsHotels>
                    <xsl:for-each select="$Get_ByCostAndHotel/resultSet/Record">
                        <pfx2:roomsHotel>
                            <xsl:attribute name="id">
                                <xsl:value-of select="id"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_hotel">
                                <xsl:value-of select="id_hotel"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_rooms">
                                <xsl:value-of select="id_rooms"/>
                            </xsl:attribute>
                            <xsl:attribute name="room_number">
                                <xsl:value-of select="room_number"/>
                            </xsl:attribute>
                            <xsl:attribute name="cost">
                                <xsl:value-of select="cost"/>
                            </xsl:attribute>
                        </pfx2:roomsHotel>
                    </xsl:for-each>
                </pfx2:roomsHotels>
            </xsl:when>
            <xsl:when test="$Get_ById/resultSet/Record">
                <pfx2:roomsHotels>
                    <xsl:for-each select="$Get_ById/resultSet/Record">
                        <pfx2:roomsHotel>
                            <xsl:attribute name="id">
                                <xsl:value-of select="id"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_hotel">
                                <xsl:value-of select="id_hotel"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_rooms">
                                <xsl:value-of select="id_rooms"/>
                            </xsl:attribute>
                            <xsl:attribute name="room_number">
                                <xsl:value-of select="room_number"/>
                            </xsl:attribute>
                            <xsl:attribute name="cost">
                                <xsl:value-of select="cost"/>
                            </xsl:attribute>
                        </pfx2:roomsHotel>
                    </xsl:for-each>
                </pfx2:roomsHotels>
            </xsl:when>
            <xsl:when test="$Get_ByIdHotel/resultSet/Record">
                <pfx2:roomsHotels>
                    <xsl:for-each select="$Get_ByIdHotel/resultSet/Record">
                        <pfx2:roomsHotel>
                            <xsl:attribute name="id">
                                <xsl:value-of select="id"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_hotel">
                                <xsl:value-of select="id_hotel"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_rooms">
                                <xsl:value-of select="id_rooms"/>
                            </xsl:attribute>
                            <xsl:attribute name="room_number">
                                <xsl:value-of select="room_number"/>
                            </xsl:attribute>
                            <xsl:attribute name="cost">
                                <xsl:value-of select="cost"/>
                            </xsl:attribute>
                        </pfx2:roomsHotel>
                    </xsl:for-each>
                </pfx2:roomsHotels>
            </xsl:when>
            <xsl:when test="$Get_ByHotelAndRoom/resultSet/Record">
                <pfx2:roomsHotels>
                    <xsl:for-each select="$Get_ByHotelAndRoom/resultSet/Record">
                        <pfx2:roomsHotel>
                            <xsl:attribute name="id">
                                <xsl:value-of select="id"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_hotel">
                                <xsl:value-of select="id_hotel"/>
                            </xsl:attribute>
                            <xsl:attribute name="id_rooms">
                                <xsl:value-of select="id_rooms"/>
                            </xsl:attribute>
                            <xsl:attribute name="room_number">
                                <xsl:value-of select="room_number"/>
                            </xsl:attribute>
                            <xsl:attribute name="cost">
                                <xsl:value-of select="cost"/>
                            </xsl:attribute>
                        </pfx2:roomsHotel>
                    </xsl:for-each>
                </pfx2:roomsHotels>
            </xsl:when>
            <xsl:otherwise>
                <pfx2:roomsHotels>
                    <pfx2:roomsHotel>
                        <xsl:attribute name="id">
                            <xsl:value-of select="&quot;&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="id_hotel">
                            <xsl:value-of select="&quot;&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="id_rooms">
                            <xsl:value-of select="&quot;&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="room_number">
                            <xsl:value-of select="&quot;&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="cost">
                            <xsl:value-of select="&quot;&quot;"/>
                        </xsl:attribute>
                    </pfx2:roomsHotel>
                </pfx2:roomsHotels>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx2:roomsHotels"/>
    <pd:endX>1000</pd:endX>
    <pd:endY>391</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1568907510179</pd:targetNamespace>
    <pd:activity name="Get_ById">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>564</pd:x>
        <pd:y>39</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Select * from rooms_hotel Where id=?</statement>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_rooms</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>room_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>cost</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>FLOAT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Error">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>446</pd:x>
        <pd:y>132</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Get_ByIdHotel">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>555</pd:x>
        <pd:y>221</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Select * from rooms_hotel Where id_hotel=?</statement>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_rooms</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>room_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>cost</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>FLOAT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get_ByCost">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>537</pd:x>
        <pd:y>308</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Select * from rooms_hotel Where cost BETWEEN 0 AND ?</statement>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>cost</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_rooms</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>room_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>cost</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>FLOAT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <cost>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </cost>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Error_2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>688</pd:x>
        <pd:y>390</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Get_ByCostAndHotel">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>555</pd:x>
        <pd:y>465</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Select * from rooms_hotel Where  id_hotel=? and cost BETWEEN 0 and ?</statement>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_rooms</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>room_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>cost</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>FLOAT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>cost</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
                <cost>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </cost>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get_ByHotelAndRoom">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>560</pd:x>
        <pd:y>607</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Select * from rooms_hotel Where id_hotel=?and room_number=?</statement>
            <jdbcSharedConfig>/Maiden_Hotels_Project/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_hotel</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_rooms</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>room_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>cost</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>FLOAT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id_hotel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>room_number</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id_hotel>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id_hotel>
                <room_number>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number)">
                            <xsl:value-of select="$Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </room_number>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ok">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>811</pd:x>
        <pd:y>595</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Error_3">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>432</pd:x>
        <pd:y>783</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get_ById</pd:to>
        <pd:xpathDescription>input id</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id)&gt;0 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)&lt;1  and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number)&lt;1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ById</pd:from>
        <pd:to>Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ById</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get_ByIdHotel</pd:to>
        <pd:xpathDescription>input idHotel</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)&gt;0 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)&lt;1  and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number)&lt;1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByIdHotel</pd:from>
        <pd:to>Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByIdHotel</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get_ByCost</pd:to>
        <pd:xpathDescription>input cost</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)&gt;0  and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number)&lt;1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByCost</pd:from>
        <pd:to>Error_2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error_2</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByCost</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get_ByCostAndHotel</pd:to>
        <pd:xpathDescription>input cost/Hotel</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)&gt;0 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)&gt;0  and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number)&lt;1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByCostAndHotel</pd:from>
        <pd:to>Error_2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByCostAndHotel</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get_ByHotelAndRoom</pd:to>
        <pd:xpathDescription>input hotel/room</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id_hotel)&gt;0 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@id)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@cost)&lt;1 and string-length($Start/pfx2:roomsHotels/pfx2:roomsHotel[1]/@room_number)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByHotelAndRoom</pd:from>
        <pd:to>ok</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ok</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get_ByHotelAndRoom</pd:from>
        <pd:to>Error_3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error_3</pd:from>
        <pd:to>ok</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Error_3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>